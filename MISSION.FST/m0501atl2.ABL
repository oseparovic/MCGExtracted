//****************************************************************************************//
//
//    UNIVERSAL WARRIOR BRAIN     CREATED:5/22/98   BY:david abzug
//                              by the MechCommander(TM) Data Entry Application
//
//   Modification, duplication & distribution is strictly limited to non-commercial
//   enterprise unless otherwise indicated by FASA Interactive Technologies, Inc.
//
//           Copyright 1997 FASA Interactive Technologies, Inc.
//****************************************************************************************//

module WBm0501atl2 : integer;

//****************************************************************************************//

const
    #include_ "OConst.abi"
    #include_ "UnitConst.abi"
type

var

    //-------------------------------------
    // Enter Additional Variables Here

    static integer                     Order1Status;
    static integer                     Order2Status;
    static integer                     Order3Status;
    static integer                     Order4Status;
    static integer                     Order5Status;
    static integer                     Order6Status;
    static integer                     Order7Status;
    static integer                     Order8Status;
    static integer                     Order9Status;
    static integer                     Order10Status;
    static integer                     Order11Status;
    static integer                     Order12Status;
    static integer                     Order13Status;

    // PATHS
    static path                        Path1;
    static path                        path2;

//----------------------------------------------------------------------------------------
function Init;

    code
         #include_ "UBInit.abi"
         //----------------------------------------
         // Enter Initial Behavior Variations Here

         // OrderStatus
         Order1Status = INCOMPLETE;
         Order2Status = INCOMPLETE;
         Order3Status = INCOMPLETE;
         Order4Status = INCOMPLETE;
         Order5Status = INCOMPLETE;
         Order6Status = INCOMPLETE;
         Order7Status = INCOMPLETE;
         Order8Status = INCOMPLETE;
         Order9Status = INCOMPLETE;
         Order10Status = INCOMPLETE;
         Order11Status = INCOMPLETE;
         Order12Status = INCOMPLETE;
         Order13Status = INCOMPLETE;

         // Paths

         Path1[0,0] = 710; // X
         Path1[0,1] = -953; // Y

         Path1[1,0] = 1198; // X
         Path1[1,1] = -1571; // Y

         Path1[2,0] = 1770; // X
         Path1[2,1] = -4400; // Y

         Path1[3,0] = -1710; // X
         Path1[3,1] = -5453; // Y

         path2[0,0] = -1768; // X
         path2[0,1] = 3298; // Y

         path2[1,0] = -958; // X
         path2[1,1] = 2638; // Y

         path2[2,0] = -826; // X
         path2[2,1] = 1453; // Y

         path2[3,0] = -738; // X
         path2[3,1] = 727; // Y

         SetEngageRadius(255);
         SetSpeed(RUN);
         SetMinimumDistance(40);
         MoveAndFireON;

endfunction;
//----------------------------------------------------------------------------------------

//----------------------------------------------------------------------------------------
// Main Code
//----------------------------------------------------------------------------------------

code

    //Initialize Orders Library
    initOrders;

    if (beenHit) then
         // Order  2 
         if (Order2Status == INCOMPLETE) then
              Flag1 = TRUE;
              Order2Status = SUCCESS;
         endif;
    endif;
    if (inHotSpot(PLAYER_FORCE,currentx,currenty,100.0)) then
         // Order  6 
         if (Order6Status == INCOMPLETE) then
              Flag2 = TRUE;
              Order6Status = SUCCESS;
         endif;
    endif;
    if (flag2) then
         // Order  7 
         if (Order7Status == INCOMPLETE) then
              ResetPath;
              Order7Status = SUCCESS;
         else
              if (Order7Status <> INCOMPLETE) then
                   // Order  8 
                   if (Order8Status == INCOMPLETE) then
                        Order8Status = MoveTo(315,-819);
                        if (Order8Status == INCOMPLETE) then
                             return(1);
                        endif;
                   else
                        if (Order8Status <> INCOMPLETE) then
                             // Order  9 
                             if (Order9Status == INCOMPLETE) then
                                  Order9Status = AttackObject(getTerrainObjectPartID(21,182),FALSE,TRUE);
                                  if (Order9Status == INCOMPLETE) then
                                       return(1);
                                  endif;
                             else
                                  if (Order9Status <> INCOMPLETE) then
                                       // Order  10 
                                       if (Order10Status == INCOMPLETE) then
                                            Order10Status = MovePath(Path1,4);
                                            if (Order10Status == INCOMPLETE) then
                                                 return(1);
                                            endif;
                                       else
                                            if (Order10Status <> INCOMPLETE) then
                                                 // Order  11 
                                                 if (Order11Status == INCOMPLETE) then
                                                      SetEngageRadius(150);
                                                      Order11Status = SUCCESS;
                                                 else
                                                      if (Order11Status <> INCOMPLETE) then
                                                           // Order  12 
                                                           if (Order12Status == INCOMPLETE) then
                                                                SetDisengageRadius(170);
                                                                Order12Status = SUCCESS;
                                                           else
                                                                if (Order12Status <> INCOMPLETE) then
                                                                     // Order  13 
                                                                     if (Order13Status == INCOMPLETE) then
                                                                          Order13Status = Sentry(-1710,-5453);
                                                                          if (Order13Status == INCOMPLETE) then
                                                                               return(1);
                                                                          endif;
                                                                     endif;
                                                                endif;
                                                           endif;
                                                      endif;
                                                 endif;
                                            endif;
                                       endif;
                                  endif;
                             endif;
                        endif;
                   endif;
              endif;
         endif;
    endif;
    if (flag1) then
         // Order  3 
         if (Order3Status == INCOMPLETE) then
              Order3Status = MovePath(path2,4);
              if (Order3Status == INCOMPLETE) then
                   return(1);
              endif;
         else
              if (Order3Status == SUCCESS) then
                   // Order  4 
                   if (Order4Status == INCOMPLETE) then
                        Order4Status = AttackObject(getTerrainObjectPartID(14,354),FALSE,TRUE);
                        if (Order4Status == INCOMPLETE) then
                             return(1);
                        endif;
                   else
                        if (Order4Status == SUCCESS) then
                             // Order  5 
                             if (Order5Status == INCOMPLETE) then
                                  Flag2 = TRUE;
                                  Order5Status = SUCCESS;
                             endif;
                        endif;
                   endif;
              endif;
         endif;
    endif;

    if (TRUE) then
         // Order  1 
         if (Order1Status == INCOMPLETE) then
              Order1Status = Attack;
              if (Order1Status == INCOMPLETE) then
                   return(1);
              endif;
         endif;
    endif;

         return(1);
endmodule.
