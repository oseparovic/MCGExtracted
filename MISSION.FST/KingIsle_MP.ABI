//*********************************************************************************
// MultiPlayer Include file for mission KingIsle

function handleMessage;

     Var

           integer MsgParams;
           integer MsgCode;

     Code

           MsgCode = getMessage(MsgParams);

           Switch (MsgCode)

                 case MSG_GENERAL_ALARM_ON:

                       GeneralAlarm = TRUE;
                       PlayGASound = TRUE;
                       PlayPASound = FALSE;
                       endcase;

                 case MSG_GENERAL_ALARM_OFF:

                       PlayGASound = FALSE;
                       endcase;

                 case MSG_PERIMETER_ALARM_ON:

                       PlayPASound = TRUE;
                       endcase;

                 case MSG_PERIMETER_ALARM_OFF:

                       PlayPASound = FALSE;
                       endcase;

                 case MSG_SET_EXIT_TIMER:

                       setTimer(EXIT_TIMER,2.0);
                       ExitTimerSet = TRUE;
                       endcase;

                 case MSG_PLAY_END_MUSIC:

                       switch (MsgParams)
                             case INNER_SPHERE_VICTORY:
                                   if (getHomeTeam == PLAYER_FORCE) then
                                       PlayDigitalMusic(VICTORY_MUSIC);
                                   else
                                       PlayDigitalMusic(DEFEAT_MUSIC);
                                   endif;
                                   endcase;
                             case CLAN_VICTORY:
                                   if (getHomeTeam == CLAN_FORCE) then
                                       PlayDigitalMusic(VICTORY_MUSIC);
                                   else
                                       PlayDigitalMusic(DEFEAT_MUSIC);
                                   endif;
                                   endcase;
                             case JOINT_LOSS:
                                   PlayDigitalMusic(DEFEAT_MUSIC);
                                   endcase;
                             case JOINT_VICTORY:
                                   PlayDigitalMusic(VICTORY_MUSIC);
                                   endcase;
                       endswitch;
                       endcase;

                 Case 1:

                       setObjectiveStatus(0, FAILED);
                       endcase;

                 Case 2:

                       setObjectiveStatus(1, FAILED);
                       endcase;

                 Case 3:

                       setObjectiveStatus(2, FAILED);
                       endcase;

                 Case 4:

                       setObjectiveStatus(3, FAILED);
                       endcase;

                 Case 5:

                       Obj_0_Action_1_Success = TRUE;
                       endcase;

                 Case 6:

                       SetObjectiveStatus(0,FAILED);
                       if (getHomeTeam == PLAYER_FORCE) then
                            playBetty(BETTY_CANNOT_COMP_OBJ);
                       endif;
                       Objective_0_Decided = TRUE;
                       endcase;

                 Case 7:

                       SetObjectiveStatus(0,SUCCESS);
                       VictoryLevel = VictoryLevel + 1;
                       if (getHomeTeam == PLAYER_FORCE) then
                            playBetty(BETTY_OBJECTIVE_COMPLETE);
                            if ((VictoryLevel < 2) AND (ClanVictoryLevel < 2)) then
                                 PlayDigitalMusic(OBJECTIVE_SUCCESS_MUSIC);
                            endif;
                       endif;
                       Objective_0_Decided = TRUE;
                       endcase;

                 Case 8:

                       Obj_1_Action_2_Success = TRUE;
                       endcase;

                 Case 9:

                       SetObjectiveStatus(1,FAILED);
                       if (getHomeTeam == PLAYER_FORCE) then
                            playBetty(BETTY_CANNOT_COMP_OBJ);
                       endif;
                       Objective_1_Decided = TRUE;
                       endcase;

                 Case 10:

                       SetObjectiveStatus(1,SUCCESS);
                       VictoryLevel = VictoryLevel + 1;
                       if (getHomeTeam == PLAYER_FORCE) then
                            playBetty(BETTY_OBJECTIVE_COMPLETE);
                            if ((VictoryLevel < 2) AND (ClanVictoryLevel < 2)) then
                                 PlayDigitalMusic(OBJECTIVE_SUCCESS_MUSIC);
                            endif;
                       endif;
                       Objective_1_Decided = TRUE;
                       endcase;

                 Case 11:

                       Obj_2_Action_2_Success = TRUE;
                       endcase;

                 Case 12:

                       SetObjectiveStatus(2,FAILED);
                       if (getHomeTeam == CLAN_FORCE) then
                            playBetty(BETTY_CANNOT_COMP_OBJ);
                       endif;
                       Objective_2_Decided = TRUE;
                       endcase;

                 Case 13:

                       SetObjectiveStatus(2,SUCCESS);
                       ClanVictoryLevel = ClanVictoryLevel + 1;
                       if (getHomeTeam == CLAN_FORCE) then
                            playBetty(BETTY_OBJECTIVE_COMPLETE);
                            if ((VictoryLevel < 2) AND (ClanVictoryLevel < 2)) then
                                 PlayDigitalMusic(OBJECTIVE_SUCCESS_MUSIC);
                            endif;
                       endif;
                       Objective_2_Decided = TRUE;
                       endcase;

                 Case 14:

                       Obj_3_Action_2_Success = TRUE;
                       endcase;

                 Case 15:

                       SetObjectiveStatus(3,FAILED);
                       if (getHomeTeam == CLAN_FORCE) then
                            playBetty(BETTY_CANNOT_COMP_OBJ);
                       endif;
                       Objective_3_Decided = TRUE;
                       endcase;

                 Case 16:

                       SetObjectiveStatus(3,SUCCESS);
                       ClanVictoryLevel = ClanVictoryLevel + 1;
                       if (getHomeTeam == CLAN_FORCE) then
                            playBetty(BETTY_OBJECTIVE_COMPLETE);
                            if ((VictoryLevel < 2) AND (ClanVictoryLevel < 2)) then
                                 PlayDigitalMusic(OBJECTIVE_SUCCESS_MUSIC);
                            endif;
                       endif;
                       Objective_3_Decided = TRUE;
                       endcase;

                 Case 17:

                       setObjectiveStatus(2, FAILED);
                       endcase;

                 Case 18:

                       setObjectiveStatus(3, FAILED);
                       endcase;

                 Case 19:

                       setObjectiveStatus(0, FAILED);
                       endcase;

                 Case 20:

                       setObjectiveStatus(1, FAILED);
                       endcase;

                 Case 21:

                       objectChangeSides(Mech_Bay_002295000,MsgParams);
                       Mech_Bay_002295000Alignment = MsgParams;
                       endcase;

                 Case 22:

                       setObjectActive(57040,FALSE);
                       setObjectActive(57888,FALSE);
                       setObjectActive(58312,FALSE);
                       setObjectActive(74888,FALSE);
                       setObjectActive(74920,FALSE);
                       setObjectActive(74928,FALSE);
                       setObjectActive(74936,FALSE);
                       setObjectActive(75496,FALSE);
                       setObjectActive(75592,FALSE);
                       setObjectActive(75912,FALSE);
                       setObjectActive(75920,FALSE);
                       setObjectActive(76072,FALSE);
                       setObjectActive(76080,FALSE);
                       setObjectActive(78656,FALSE);
                       setObjectActive(78992,FALSE);
                       setObjectActive(74889,FALSE);
                       setObjectActive(74921,FALSE);
                       setObjectActive(74937,FALSE);
                       setObjectActive(75593,FALSE);
                       setObjectActive(78657,FALSE);
                       Turret_Control_016217000Alignment = -2;
                       endcase;

                 Case 23:

                       objectChangeSides(57040,MsgParams);
                       setPotentialContact(57040,2);
                       objectChangeSides(57888,MsgParams);
                       setPotentialContact(57888,2);
                       objectChangeSides(58312,MsgParams);
                       setPotentialContact(58312,2);
                       objectChangeSides(74888,MsgParams);
                       setPotentialContact(74888,2);
                       objectChangeSides(74920,MsgParams);
                       setPotentialContact(74920,2);
                       objectChangeSides(74928,MsgParams);
                       setPotentialContact(74928,2);
                       objectChangeSides(74936,MsgParams);
                       setPotentialContact(74936,2);
                       objectChangeSides(75496,MsgParams);
                       setPotentialContact(75496,2);
                       objectChangeSides(75592,MsgParams);
                       setPotentialContact(75592,2);
                       objectChangeSides(75912,MsgParams);
                       setPotentialContact(75912,2);
                       objectChangeSides(75920,MsgParams);
                       setPotentialContact(75920,2);
                       objectChangeSides(76072,MsgParams);
                       setPotentialContact(76072,2);
                       objectChangeSides(76080,MsgParams);
                       setPotentialContact(76080,2);
                       objectChangeSides(78656,MsgParams);
                       setPotentialContact(78656,2);
                       objectChangeSides(78992,MsgParams);
                       setPotentialContact(78992,2);
                       objectChangeSides(74889,MsgParams);
                       setPotentialContact(74889,2);
                       objectChangeSides(74921,MsgParams);
                       setPotentialContact(74921,2);
                       objectChangeSides(74937,MsgParams);
                       setPotentialContact(74937,2);
                       objectChangeSides(75593,MsgParams);
                       setPotentialContact(75593,2);
                       objectChangeSides(78657,MsgParams);
                       setPotentialContact(78657,2);
                       Turret_Control_016217000Alignment = MsgParams;
                       objectChangeSides(Turret_Control_016217000,MsgParams);
                       endcase;

                 Case 24:

                       setObjectActive(44360,FALSE);
                       setObjectActive(45632,FALSE);
                       setObjectActive(61824,FALSE);
                       setObjectActive(61832,FALSE);
                       setObjectActive(61840,FALSE);
                       setObjectActive(61848,FALSE);
                       setObjectActive(61952,FALSE);
                       setObjectActive(61968,FALSE);
                       setObjectActive(62112,FALSE);
                       setObjectActive(62128,FALSE);
                       setObjectActive(62912,FALSE);
                       setObjectActive(63072,FALSE);
                       setObjectActive(63080,FALSE);
                       setObjectActive(65432,FALSE);
                       setObjectActive(65856,FALSE);
                       setObjectActive(66520,FALSE);
                       setObjectActive(67040,FALSE);
                       setObjectActive(61849,FALSE);
                       setObjectActive(63073,FALSE);
                       setObjectActive(65857,FALSE);
                       setObjectActive(66521,FALSE);
                       setObjectActive(63074,FALSE);
                       setObjectActive(65858,FALSE);
                       setObjectActive(66522,FALSE);
                       setObjectActive(65859,FALSE);
                       setObjectActive(66523,FALSE);
                       Turret_Control_012234000Alignment = -2;
                       endcase;

                 Case 25:

                       objectChangeSides(44360,MsgParams);
                       setPotentialContact(44360,2);
                       objectChangeSides(45632,MsgParams);
                       setPotentialContact(45632,2);
                       objectChangeSides(61824,MsgParams);
                       setPotentialContact(61824,2);
                       objectChangeSides(61832,MsgParams);
                       setPotentialContact(61832,2);
                       objectChangeSides(61840,MsgParams);
                       setPotentialContact(61840,2);
                       objectChangeSides(61848,MsgParams);
                       setPotentialContact(61848,2);
                       objectChangeSides(61952,MsgParams);
                       setPotentialContact(61952,2);
                       objectChangeSides(61968,MsgParams);
                       setPotentialContact(61968,2);
                       objectChangeSides(62112,MsgParams);
                       setPotentialContact(62112,2);
                       objectChangeSides(62128,MsgParams);
                       setPotentialContact(62128,2);
                       objectChangeSides(62912,MsgParams);
                       setPotentialContact(62912,2);
                       objectChangeSides(63072,MsgParams);
                       setPotentialContact(63072,2);
                       objectChangeSides(63080,MsgParams);
                       setPotentialContact(63080,2);
                       objectChangeSides(65432,MsgParams);
                       setPotentialContact(65432,2);
                       objectChangeSides(65856,MsgParams);
                       setPotentialContact(65856,2);
                       objectChangeSides(66520,MsgParams);
                       setPotentialContact(66520,2);
                       objectChangeSides(67040,MsgParams);
                       setPotentialContact(67040,2);
                       objectChangeSides(61849,MsgParams);
                       setPotentialContact(61849,2);
                       objectChangeSides(63073,MsgParams);
                       setPotentialContact(63073,2);
                       objectChangeSides(65857,MsgParams);
                       setPotentialContact(65857,2);
                       objectChangeSides(66521,MsgParams);
                       setPotentialContact(66521,2);
                       objectChangeSides(63074,MsgParams);
                       setPotentialContact(63074,2);
                       objectChangeSides(65858,MsgParams);
                       setPotentialContact(65858,2);
                       objectChangeSides(66522,MsgParams);
                       setPotentialContact(66522,2);
                       objectChangeSides(65859,MsgParams);
                       setPotentialContact(65859,2);
                       objectChangeSides(66523,MsgParams);
                       setPotentialContact(66523,2);
                       Turret_Control_012234000Alignment = MsgParams;
                       objectChangeSides(Turret_Control_012234000,MsgParams);
                       endcase;

                 Case 26:

                       LockGateOpen(45656);
                       Gate_Control_019000000Alignment = -2;
                       endcase;

                 Case 27:

                       LockGateClosed(45656);
                       Gate_Control_019000000Alignment = -2;
                       endcase;

                 Case 28:

                       LockGateOpen(63096);
                       Gate_Control_019000000Alignment = -2;
                       endcase;

                 Case 29:

                       LockGateClosed(63096);
                       Gate_Control_019000000Alignment = -2;
                       endcase;

                 Case 30:

                       LockGateOpen(66240);
                       Gate_Control_019000000Alignment = -2;
                       endcase;

                 Case 31:

                       LockGateClosed(66240);
                       Gate_Control_019000000Alignment = -2;
                       endcase;

                 Case 32:

                       objectChangeSides(45656,MsgParams);
                       ReleaseGateLock(45656);
                       objectChangeSides(63096,MsgParams);
                       ReleaseGateLock(63096);
                       objectChangeSides(66240,MsgParams);
                       ReleaseGateLock(66240);
                       Gate_Control_019000000Alignment = MsgParams;
                       objectChangeSides(Gate_Control_019000000,MsgParams);
                       endcase;

                 Case 33:

                       setObjectActive(12664,FALSE);
                       setObjectActive(15944,FALSE);
                       setObjectActive(29824,FALSE);
                       Turret_Control_002255000Alignment = -2;
                       endcase;

                 Case 34:

                       objectChangeSides(12664,MsgParams);
                       setPotentialContact(12664,2);
                       objectChangeSides(15944,MsgParams);
                       setPotentialContact(15944,2);
                       objectChangeSides(29824,MsgParams);
                       setPotentialContact(29824,2);
                       Turret_Control_002255000Alignment = MsgParams;
                       objectChangeSides(Turret_Control_002255000,MsgParams);
                       endcase;

                 Case 35:

                       LockGateOpen(12712);
                       Gate_Control_003222000Alignment = -2;
                       endcase;

                 Case 36:

                       LockGateClosed(12712);
                       Gate_Control_003222000Alignment = -2;
                       endcase;

                 Case 37:

                       objectChangeSides(12712,MsgParams);
                       ReleaseGateLock(12712);
                       Gate_Control_003222000Alignment = MsgParams;
                       objectChangeSides(Gate_Control_003222000,MsgParams);
                       endcase;

                 Case 38:

                       setObjectActive(28664,FALSE);
                       setObjectActive(28672,FALSE);
                       Turret_Control_008102000Alignment = -2;
                       endcase;

                 Case 39:

                       objectChangeSides(28664,MsgParams);
                       setPotentialContact(28664,2);
                       objectChangeSides(28672,MsgParams);
                       setPotentialContact(28672,2);
                       Turret_Control_008102000Alignment = MsgParams;
                       objectChangeSides(Turret_Control_008102000,MsgParams);
                       endcase;

                 Case 40:

                       LockGateOpen(28504);
                       Gate_Control_008141000Alignment = -2;
                       endcase;

                 Case 41:

                       LockGateClosed(28504);
                       Gate_Control_008141000Alignment = -2;
                       endcase;

                 Case 42:

                       LockGateOpen(30672);
                       Gate_Control_008141000Alignment = -2;
                       endcase;

                 Case 43:

                       LockGateClosed(30672);
                       Gate_Control_008141000Alignment = -2;
                       endcase;

                 Case 44:

                       objectChangeSides(28504,MsgParams);
                       ReleaseGateLock(28504);
                       objectChangeSides(30672,MsgParams);
                       ReleaseGateLock(30672);
                       Gate_Control_008141000Alignment = MsgParams;
                       objectChangeSides(Gate_Control_008141000,MsgParams);
                       endcase;

                 Case 45:

                       LockGateOpen(16832);
                       Gate_Control_009011000Alignment = -2;
                       endcase;

                 Case 46:

                       LockGateClosed(16832);
                       Gate_Control_009011000Alignment = -2;
                       endcase;

                 Case 47:

                       LockGateOpen(33672);
                       Gate_Control_009011000Alignment = -2;
                       endcase;

                 Case 48:

                       LockGateClosed(33672);
                       Gate_Control_009011000Alignment = -2;
                       endcase;

                 Case 49:

                       objectChangeSides(16832,MsgParams);
                       ReleaseGateLock(16832);
                       objectChangeSides(33672,MsgParams);
                       ReleaseGateLock(33672);
                       Gate_Control_009011000Alignment = MsgParams;
                       objectChangeSides(Gate_Control_009011000,MsgParams);
                       endcase;

                 Case 50:

                       setObjectActive(33680,FALSE);
                       setObjectActive(33840,FALSE);
                       Turret_Control_003372000Alignment = -2;
                       endcase;

                 Case 51:

                       objectChangeSides(33680,MsgParams);
                       setPotentialContact(33680,2);
                       objectChangeSides(33840,MsgParams);
                       setPotentialContact(33840,2);
                       Turret_Control_003372000Alignment = MsgParams;
                       objectChangeSides(Turret_Control_003372000,MsgParams);
                       endcase;

                 Case 52:

                       LockGateOpen(74688);
                       Gate_Control_022237000Alignment = -2;
                       endcase;

                 Case 53:

                       LockGateClosed(74688);
                       Gate_Control_022237000Alignment = -2;
                       endcase;

                 Case 54:

                       LockGateOpen(74784);
                       Gate_Control_022237000Alignment = -2;
                       endcase;

                 Case 55:

                       LockGateClosed(74784);
                       Gate_Control_022237000Alignment = -2;
                       endcase;

                 Case 56:

                       LockGateOpen(75768);
                       Gate_Control_022237000Alignment = -2;
                       endcase;

                 Case 57:

                       LockGateClosed(75768);
                       Gate_Control_022237000Alignment = -2;
                       endcase;

                 Case 58:

                       objectChangeSides(74688,MsgParams);
                       ReleaseGateLock(74688);
                       objectChangeSides(74784,MsgParams);
                       ReleaseGateLock(74784);
                       objectChangeSides(75768,MsgParams);
                       ReleaseGateLock(75768);
                       Gate_Control_022237000Alignment = MsgParams;
                       objectChangeSides(Gate_Control_022237000,MsgParams);
                       endcase;

                 Case 59:

                       objectChangeSides(Mech_Bay_008399000,MsgParams);
                       Mech_Bay_008399000Alignment = MsgParams;
                       endcase;

                 Case 60:

                       objectChangeSides(Mech_Bay_013023000,MsgParams);
                       Mech_Bay_013023000Alignment = MsgParams;
                       endcase;

                 Case 61:

                       objectChangeSides(Mech_Bay_012358000,MsgParams);
                       Mech_Bay_012358000Alignment = MsgParams;
                       endcase;

                 Case 62:

                       objectChangeSides(Mech_Bay_023202000,MsgParams);
                       Mech_Bay_023202000Alignment = MsgParams;
                       endcase;

                 Case 63:

                       objectChangeSides(Artillery_Crate_028085000, NEUTRAL);
                       if (getStrikes(((MsgParams/10)-1),(MsgParams MOD 10)) < MAX_STRIKES) then
                             addStrikes(((MsgParams/10)-1),(MsgParams MOD 10),1);
                       endif;
                       setCaptureable(Artillery_Crate_028085000, FALSE);
                       Artillery_Crate_028085000Alignment = -2;
                       endcase;

                 Case 64:

                       Artillery_Crate_028085000Alignment = Artillery_Crate_028085000Alignment - 1;
                       endcase;

                 Case 65:

                       setCaptureable(Artillery_Crate_028085000, TRUE);
                       Artillery_Crate_028085000Alignment = NEUTRAL;
                       endcase;

                 Case 66:

                       objectChangeSides(Artillery_Crate_025214000, NEUTRAL);
                       if (getStrikes(((MsgParams/10)-1),(MsgParams MOD 10)) < MAX_STRIKES) then
                             addStrikes(((MsgParams/10)-1),(MsgParams MOD 10),1);
                       endif;
                       setCaptureable(Artillery_Crate_025214000, FALSE);
                       Artillery_Crate_025214000Alignment = -2;
                       endcase;

                 Case 67:

                       Artillery_Crate_025214000Alignment = Artillery_Crate_025214000Alignment - 1;
                       endcase;

                 Case 68:

                       setCaptureable(Artillery_Crate_025214000, TRUE);
                       Artillery_Crate_025214000Alignment = NEUTRAL;
                       endcase;

           endswitch;

endfunction;

