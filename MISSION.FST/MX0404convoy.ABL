//****************************************************************************************//
//
//    UNIVERSAL WARRIOR BRAIN     CREATED:11/12/98   BY:david abzug
//                              by the MechCommander(TM) Data Entry Application
//
//   Modification, duplication & distribution is strictly limited to non-commercial
//   enterprise unless otherwise indicated by FASA Interactive Technologies, Inc.
//
//           Copyright 1997 FASA Interactive Technologies, Inc.
//****************************************************************************************//

module WBMX0404convoy : integer;

//****************************************************************************************//

const
    #include_ "OConst.abi"
    #include_ "UnitConst.abi"
type

var

    //-------------------------------------
    // Enter Additional Variables Here

    static integer                     Order1Status;
    static integer                     Order2Status;
    static integer                     Order3Status;
    static integer                     Order4Status;

    // PATHS
    static path                        Path1;

//----------------------------------------------------------------------------------------
function Init;

    code
         #include_ "UBInit.abi"
         //----------------------------------------
         // Enter Initial Behavior Variations Here

         // OrderStatus
         Order1Status = INCOMPLETE;
         Order2Status = INCOMPLETE;
         Order3Status = INCOMPLETE;
         Order4Status = INCOMPLETE;

         // Paths

         Path1[0,0] = -1090; // X
         Path1[0,1] = -5424; // Y

         Path1[1,0] = -1087; // X
         Path1[1,1] = -2127; // Y

         Path1[2,0] = -345; // X
         Path1[2,1] = -1699; // Y

         Path1[3,0] = -322; // X
         Path1[3,1] = -551; // Y

         Path1[4,0] = -3269; // X
         Path1[4,1] = -551; // Y

         Path1[5,0] = -3650; // X
         Path1[5,1] = -300; // Y

         Path1[6,0] = -4007; // X
         Path1[6,1] = 447; // Y

         Path1[7,0] = -3996; // X
         Path1[7,1] = 1860; // Y

         Path1[8,0] = -3913; // X
         Path1[8,1] = 3621; // Y

         StopFighting;
         MoveAndFireON;

endfunction;
//----------------------------------------------------------------------------------------

//----------------------------------------------------------------------------------------
// Main Code
//----------------------------------------------------------------------------------------

code

    //Initialize Orders Library
    initOrders;

    if (gametime > 20) then
         // Order  2 
         if (Order2Status == INCOMPLETE) then
              Order2Status = MovePath(Path1,9);
              if (Order2Status == INCOMPLETE) then
                   return(1);
              endif;
         else
              if (Order2Status == SUCCESS) then
                   // Order  3 
                   if (Order3Status == INCOMPLETE) then
                        Flag4 = TRUE;
                        Order3Status = SUCCESS;
                   else
                        if (Order3Status <> INCOMPLETE) then
                             // Order  4 
                             if (Order4Status == INCOMPLETE) then
                                  Order4Status = Withdraw;
                                  if (Order4Status == INCOMPLETE) then
                                       return(1);
                                  endif;
                             endif;
                        endif;
                   endif;
              endif;
         endif;
    endif;

    if (TRUE) then
         // Order  1 
         if (Order1Status == INCOMPLETE) then
              GeneralAlarm = FALSE;
              Order1Status = SUCCESS;
         endif;
    endif;

         return(1);
endmodule.
