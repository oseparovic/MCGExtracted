//****************************************************************************************//
//
//    UNIVERSAL WARRIOR BRAIN     CREATED:2/25/98   BY:Rob Nicholls
//                              by the MechCommander(TM) Data Entry Application
//
//   Modification, duplication & distribution is strictly limited to non-commercial
//   enterprise unless otherwise indicated by FASA Interactive Technologies, Inc.
//
//           Copyright 1997 FASA Interactive Technologies, Inc.
//****************************************************************************************//

module WBM0306capgrd : integer;

//****************************************************************************************//

const
    #include_ "OConst.abi"
    #include_ "UnitConst.abi"
type

var

    //-------------------------------------
    // Enter Additional Variables Here

    static integer                     Order1Status;
    static integer                     Order2Status;
    static integer                     Order3Status;
    static integer                     Order4Status;
    static integer                     Order5Status;

    // PATHS
    static path                        BasePatrol;

//----------------------------------------------------------------------------------------
function Init;

    code
         #include_ "UBInit.abi"
         //----------------------------------------
         // Enter Initial Behavior Variations Here

         // OrderStatus
         Order1Status = INCOMPLETE;
         Order2Status = INCOMPLETE;
         Order3Status = INCOMPLETE;
         Order4Status = INCOMPLETE;
         Order5Status = INCOMPLETE;

         // Paths

         BasePatrol[0,0] = -1737; // X
         BasePatrol[0,1] = 4206; // Y

         BasePatrol[1,0] = 283; // X
         BasePatrol[1,1] = 4195; // Y

         SetEngageRadius(250);
         SetDisEngageRadius(400);
         SetGuardMod(2.5);

endfunction;
//----------------------------------------------------------------------------------------

//----------------------------------------------------------------------------------------
// Main Code
//----------------------------------------------------------------------------------------

code

    //Initialize Orders Library
    initOrders;

    if (getTarget(CUR_OBJECT_ID) > 0) then
         // Order  2 
         if (Order2Status == INCOMPLETE) then
              Flag1 = TRUE;
              Order2Status = SUCCESS;
         endif;
    endif;
    if (getObjectDamage(AdminBldg) > 0) then
         // Order  5 
         if (Order5Status == INCOMPLETE) then
              Flag1 = TRUE;
              Order5Status = SUCCESS;
         endif;
    endif;
    if (isCaptured(SensorControlBldg) == 1) then
         // Order  3 
         if (Order3Status == INCOMPLETE) then
              Order3Status = Patrol(BasePatrol,2,PATROL_BACK_AND_FORTH, 999);
              if (Order3Status == INCOMPLETE) then
                   return(1);
              endif;
         else
              if (Order3Status <> INCOMPLETE) then
                   // Order  4 
                   if (Order4Status == INCOMPLETE) then
                        Order4Status = Attack;
                        if (Order4Status == INCOMPLETE) then
                             return(1);
                        endif;
                   endif;
              endif;
         endif;
    endif;

    if (TRUE) then
         // Order  1 
         if (Order1Status == INCOMPLETE) then
              Order1Status = Sentry(MyX,MyY);
              if (Order1Status == INCOMPLETE) then
                   return(1);
              endif;
         endif;
    endif;

         return(1);
endmodule.
