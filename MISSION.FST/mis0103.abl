//*********************************************************************************

module MissionBrain_1_3 : integer;

     //--------------------------------------------------------
     // Operation:  1                  Mission:  3 
     // MissionID:  202                Name: A Little Help From My Friends
     // Designer: david abzug
     // Created: 5/7/98                By: david abzug
     //--------------------------------------------------------

//------------------------------------------------------------------
//
//     Constant Definitions
//
//------------------------------------------------------------------
     const

          #include_ "misconst.abi"

          //------------------
          // Objective IDs
          //------------------
           OBJ0_Link_up_with_Raven       = 0;
           OBJ1_Escort_Raven_to_Extract  = 1;

//------------------------------------------------------------------
//
//     Type Definitions
//
//------------------------------------------------------------------
     type


//------------------------------------------------------------------
//
//     Variable Declarations
//
//------------------------------------------------------------------
      var

            #include_ "1_3VAR.ABI"

            static integer      ScenarioResult;
            eternal boolean     ExitTimerSet;
            static integer      VictoryLevel;
            char[40]            dstring;
            eternal real        gametime;
            static real         nextsecond;
            integer             x;
            integer             y;
            Position            aPoint;
            eternal boolean     PlayerForceDead;
            eternal boolean     ClanForceDead;
            eternal boolean     AlliedForceDead;
            eternal boolean     GeneralAlarm;
            eternal boolean     Flag1;
            eternal boolean     Flag2;
            eternal boolean     Flag3;
            eternal boolean     Flag4;
            eternal boolean     Flag5;
            eternal boolean     Flag6;
            eternal boolean     Flag7;
            eternal boolean     Flag8;
            eternal boolean     Flag9;
            eternal boolean     Flag10;
            static boolean      PlayPASound;
            static boolean      PlayGASound;
            eternal integer     GeneralAlarmCounter;
            boolean             PerimeterBreach;
            static boolean      Objective_0_Decided;
            static boolean      Objective_1_Decided;
            static boolean      Obj_1_Action_1_Success;
            static boolean      Obj_1_Action_2_Success;
            static boolean      Obj_1_Action_3_Success;

//------------------------------------------------------------------
//
//     Init Function    (automatically run first time through)
//
//------------------------------------------------------------------
function init;

       code

            ScenarioResult = PLAYING;
            PlayerForceDead = FALSE;
            ClanForceDead = FALSE;
            AlliedForceDead = FALSE;
            ExitTimerSet = FALSE;
            VictoryLevel = 0; // New Scheme
            NextSecond = 1.0;
            GeneralAlarmCounter = -1;
            GeneralAlarm = FALSE;
            Flag1 = FALSE;
            Flag2 = FALSE;
            Flag3 = FALSE;
            Flag4 = FALSE;
            Flag5 = FALSE;
            Flag6 = FALSE;
            Flag7 = FALSE;
            Flag8 = FALSE;
            Flag9 = FALSE;
            Flag10 = FALSE;
            PlayPASound = FALSE;
            PlayGASound = FALSE;
            Objective_0_Decided = FALSE;
            Objective_1_Decided = FALSE;
            Obj_1_Action_1_Success = FALSE;
            Obj_1_Action_2_Success = FALSE;
            Obj_1_Action_3_Success = FALSE;

            #include_ "1_3INIT.ABI"

            //---------------------------------------
            // Custom ABL INIT Code
            //---------------------------------------

            			//----------------
            			//Time to find the raven
            			//----------------
            
            			numforce = getunitmates(player_force,teamlist);
            			raven = 0;
            			curobj = 0;
            			while ((curobj < (numforce)) and
            				(raven == 0)) do
            				if (objecttypeID(teamlist[curobj]) == raven_type) then
            					raven = teamlist[curobj];
            				endif;
            				curobj = curobj + 1
            			endwhile;

endfunction;

//------------------------------------------------------------------
//
//     Main Code
//
//------------------------------------------------------------------
      code

            //------------------------------------------------
            // Debug Window Game Clock Second Counter
            // Note:  This is used by some included functions.
            //------------------------------------------------
            gametime = gettime;
            If (gametime >= nextsecond) Then
                  nextsecond = gametime + 1;
                  If (GeneralAlarm) then
                       GeneralAlarmCounter = GeneralAlarmCounter + 1;
                  endif;
                  // dstring = "Gametime: ";
                  // concat(dstring,gametime);
                  // Print (dstring);
            endif;
            if ((PlayGASound) and (NextSecond == gametime + 1)) then
                  playSoundEffect(GENERAL_ALARM_SOUND);
            endif;
            if (PlayPASound) then
                  playSoundEffect(PERIMETER_ALARM_SOUND);
            endif;
            PerimeterBreach = FALSE;

            //---------------------------------------
            // Create Non-Existing Vehicles
            //---------------------------------------
            #include_ "1_3CRE.ABI"

            //---------------------------------------
            // Activate inactive vehicles
            //---------------------------------------
            #include_ "1_3ACT.ABI"

            //---------------------------------------
            // Structure
            //---------------------------------------
            #include_ "1_3STR.ABI"

            //---------------------------------------
            // Lookout Points
            //---------------------------------------
            #include_ "1_3LOP.ABI"

            //---------------------------------------
            // Force Dead Checks
            //---------------------------------------
            if (isDeadorFled(PLAYER_FORCE)) then
                  PlayerForceDead = TRUE;
            endif;
            if (isDeadorFled(CLAN_FORCE)) then
                  ClanForceDead = TRUE;
            endif;
            if (isDeadorFled(ALLIED_FORCE)) then
                  AlliedForceDead = TRUE;
            endif;

            //---------------------------------------
            // SET EXIT TIMER IF PLAYER DEAD/DISABLED
            //---------------------------------------

            if ((NOT ExitTimerSet) AND (PlayerForceDead)) then
                  // Fail any Undecided Player Objectives
                  if (checkObjectiveStatus(0) == INCOMPLETE) then
                        setObjectiveStatus(0, FAILED);
                  endif;
                  if (checkObjectiveStatus(1) == INCOMPLETE) then
                        setObjectiveStatus(1, FAILED);
                  endif;
            endif;

            //---------------------------------------
            // Custom ABL Code
            //---------------------------------------

            if (not dropone) then
                 			//----------------------
                 			//initial artillery drop
                 			//----------------------
                 
                 
                 				dropone = true;
                 				apoint[0] = 870.0;
                 				apoint[1] = -2700.0;
                 				apoint[2] = 0.0;
                 				setRevealed(-1,100.0,aPoint);
                 				callstrikeex (507,-1,953.0,-2696.0,0.0,true,10.5);
                 				callstrikeex (507,-1,900.0,-2700.0,0.0,true,9.5);
                 				callstrikeex (507,-1,839.0,-2715.0,0.0,true,8.0);
                 				callstrikeex (507,-1,799.0,-2680.0,0.0,true,7.0);
            endif;

            if ((checkObjectiveStatus(0) <> SUCCESS) and (NOT ExitTimerSet) and (numalive(player_force) == 1)) then
                                   		playerforcedead = true;
            endif;

            if (not flag9) then
                 	for z = 0 to (numforce - 2) do
                      	if (distancetoobject(teamlist[z],raven) < 75) then
                         	   setobjectActive(raven,TRUE);
                 				flag9 = true;
                      	endif;
                 	 endfor;
                 
                      if (distancetoobject(clan_FORCE,raven) < 75) then
                            	   setobjectActive(raven,TRUE);
                 				flag9 = true;
                      endif;
            endif;

            if (checkObjectiveStatus(0) == SUCCESS) then
                 setobjectivepos(1,988.0,-3278.0,0.0);
            endif;

            //---------------------------------------
            // Objective Resolution
            //---------------------------------------

            if (checkObjectiveStatus(0) == INCOMPLETE) then

                 if (flag9) then
                       SetObjectiveStatus(0,SUCCESS);
                       playBetty(BETTY_OBJECTIVE_COMPLETE);
                       VictoryLevel = VictoryLevel + 1;
                       Objective_0_Decided = TRUE;
                       if (VictoryLevel < 2) then
                             PlayDigitalMusic(OBJECTIVE_SUCCESS_MUSIC);
                       endif;
                 else
                       if (gettimeleft == 0.0) then
                             SetObjectiveStatus(0,FAILED);
                             playBetty(BETTY_CANNOT_COMP_OBJ);
                             Objective_0_Decided = TRUE;
                       endif;
                 endif;

            else
                  if (NOT ExitTimerSet) then        
                        //if Failed primary Objective, fail mission
                        if (checkObjectiveStatus(0) == FAILED) then
                              setTimer(EXIT_TIMER,2.0);
                              ExitTimerSet = TRUE;
                        endif;
                  endif;
            endif;

            if ((checkObjectiveStatus(1) == INCOMPLETE) AND (Objective_0_Decided)) then

                 aPoint[0] = 988;
                 aPoint[1] = -3278;
                 aPoint[2] = 0.0;
                 if (isWithinArea(PLAYER_FORCE,aPoint,50)) then
                       Obj_1_Action_1_Success = TRUE;
                 else
                       if (gettimeleft == 0.0) then
                             SetObjectiveStatus(1,FAILED);
                             playBetty(BETTY_CANNOT_COMP_OBJ);
                             Objective_1_Decided = TRUE;
                       endif;
                 endif;

                 x = NumVehicleType(RAVEN_TYPE,PLAYER_FORCE,y);
                 if (y > 0) then
                       SetObjectiveStatus(1,FAILED);
                       playBetty(BETTY_CANNOT_COMP_OBJ);
                       Objective_1_Decided = TRUE;
                 else
                       if ((gettimeleft == 0.0) OR (Obj_1_Action_1_Success)) then
                             Obj_1_Action_2_Success = TRUE;
                       endif;
                 endif;

                 if (isDead(ClanStar(6))) then
                       Obj_1_Action_3_Success = TRUE;
                 else
                       if (gettimeleft == 0.0) then
                             SetObjectiveStatus(1,FAILED);
                             playBetty(BETTY_CANNOT_COMP_OBJ);
                             Objective_1_Decided = TRUE;
                       endif;
                 endif;

                 if ((Obj_1_Action_1_Success) AND (Obj_1_Action_2_Success) AND (Obj_1_Action_3_Success)) then
                       SetObjectiveStatus(1,SUCCESS);
                       playBetty(BETTY_OBJECTIVE_COMPLETE);
                       VictoryLevel = VictoryLevel + 1;
                       Objective_1_Decided = TRUE;
                       if (VictoryLevel < 2) then
                             PlayDigitalMusic(OBJECTIVE_SUCCESS_MUSIC);
                       endif;
                 endif;

            else
                  if (NOT ExitTimerSet) then        
                        //if Failed primary Objective, fail mission
                        if (checkObjectiveStatus(1) == FAILED) then
                              setTimer(EXIT_TIMER,2.0);
                              ExitTimerSet = TRUE;
                        endif;
                  endif;
            endif;

            if ((NOT ExitTimerSet) AND (Objective_0_Decided) AND (Objective_1_Decided)) then
                  setTimer(EXIT_TIMER,2.0);
                  ExitTimerSet = TRUE;
            endif;

            //---------------------------------------
            // END SCENARIO
            //---------------------------------------

            if ((ExitTimerSet) AND (CheckTimer(EXIT_TIMER) == 0.0)) then
                  if (VictoryLevel >= 2) then
                        ScenarioResult = PLAYER_WIN_BIG;
                        PlayDigitalMusic(VICTORY_MUSIC);
                  else
                        ScenarioResult = PLAYER_LOST_BIG;
                        PlayDigitalMusic(DEFEAT_MUSIC);
                  endif;
            endif;

            //---------------------------------------
            // RETURN RESULT
            //---------------------------------------

            return (ScenarioResult);
endmodule.
//******************************************************************
