//****************************************************************************************//
//
//    UNIVERSAL WARRIOR BRAIN     CREATED:11/18/98   BY:Mike Lee
//                              by the MechCommander(TM) Data Entry Application
//
//   Modification, duplication & distribution is strictly limited to non-commercial
//   enterprise unless otherwise indicated by FASA Interactive Technologies, Inc.
//
//           Copyright 1997 FASA Interactive Technologies, Inc.
//****************************************************************************************//

module WBmx0301convoy2 : integer;

//****************************************************************************************//

const
    #include_ "OConst.abi"
    #include_ "UnitConst.abi"
type

var

    //-------------------------------------
    // Enter Additional Variables Here

    static integer                     Order1Status;
    static integer                     Order2Status;
    static integer                     Order3Status;
    static integer                     Order4Status;
    static integer                     Order5Status;

    // PATHS
    static path                        Path1;

//----------------------------------------------------------------------------------------
function Init;

    code
         #include_ "UBInit.abi"
         //----------------------------------------
         // Enter Initial Behavior Variations Here

         // OrderStatus
         Order1Status = INCOMPLETE;
         Order2Status = INCOMPLETE;
         Order3Status = INCOMPLETE;
         Order4Status = INCOMPLETE;
         Order5Status = INCOMPLETE;

         // Paths

         Path1[0,0] = -1720; // X
         Path1[0,1] = 5975; // Y

         Path1[1,0] = -470; // X
         Path1[1,1] = 5950; // Y

         Path1[2,0] = -435; // X
         Path1[2,1] = 2030; // Y

         Path1[3,0] = 290; // X
         Path1[3,1] = 1990; // Y

         Path1[4,0] = 335; // X
         Path1[4,1] = -2240; // Y

         Path1[5,0] = -460; // X
         Path1[5,1] = -2250; // Y

         Path1[6,0] = 50; // X
         Path1[6,1] = -5640; // Y

         SetEngageRadius(0);
         SetDisEngageRadius(0);
         IdentifySensorContactsOFF;
         MoveToEngageOFF;
         StopFighting;
         SetMinimumDistance(10);

endfunction;
//----------------------------------------------------------------------------------------

//----------------------------------------------------------------------------------------
// Main Code
//----------------------------------------------------------------------------------------

code

    //Initialize Orders Library
    initOrders;

    if (flag3) then
         // Order  2 
         if (Order2Status == INCOMPLETE) then
              SetSpeed(RUN);
              Order2Status = SUCCESS;
         endif;
    endif;
    if (beenHit) then
         // Order  3 
         if (Order3Status == INCOMPLETE) then
              Flag3 = TRUE;
              Order3Status = SUCCESS;
         endif;
    endif;
    if (isCaptured(me) == 1) then
         // Order  4 
         if (Order4Status == INCOMPLETE) then
              SetRevealed(1,300.0,ObjectPosition[ObjPos(TCMain1)]);
              Order4Status = SUCCESS;
         endif;
    endif;
    if (isCaptured(me) == 1) then
         // Order  5 
         if (Order5Status == INCOMPLETE) then
              SetRevealed(1,400.0,ObjectPosition[ObjPos(TCBase)]);
              Order5Status = SUCCESS;
         endif;
    endif;

    if (TRUE) then
         // Order  1 
         if (Order1Status == INCOMPLETE) then
              Order1Status = MovePath(Path1,7);
              if (Order1Status == INCOMPLETE) then
                   return(1);
              endif;
         endif;
    endif;

         return(1);
endmodule.
