//****************************************************************************************//
//
//    UNIVERSAL WARRIOR BRAIN     CREATED:4/13/98   BY:Rob Nicholls
//                              by the MechCommander(TM) Data Entry Application
//
//   Modification, duplication & distribution is strictly limited to non-commercial
//   enterprise unless otherwise indicated by FASA Interactive Technologies, Inc.
//
//           Copyright 1997 FASA Interactive Technologies, Inc.
//****************************************************************************************//

module WBm0402Pat1_1 : integer;

//****************************************************************************************//

const
    #include_ "OConst.abi"
    #include_ "UnitConst.abi"
type

var

    //-------------------------------------
    // Enter Additional Variables Here

    static integer                     Order1Status;
    static integer                     Order2Status;

    // PATHS
    static path                        Path1;

//----------------------------------------------------------------------------------------
function Init;

    code
         #include_ "UBInit.abi"
         //----------------------------------------
         // Enter Initial Behavior Variations Here

         // OrderStatus
         Order1Status = INCOMPLETE;
         Order2Status = INCOMPLETE;

         // Paths

         Path1[0,0] = 1562; // X
         Path1[0,1] = -5355; // Y

         Path1[1,0] = 1075; // X
         Path1[1,1] = -5541; // Y

         Path1[2,0] = 594; // X
         Path1[2,1] = -6017; // Y

         Path1[3,0] = -104; // X
         Path1[3,1] = -6321; // Y

         Path1[4,0] = -743; // X
         Path1[4,1] = -5820; // Y

         Path1[5,0] = -1245; // X
         Path1[5,1] = -5335; // Y

         Path1[6,0] = -1132; // X
         Path1[6,1] = -3887; // Y

         Path1[7,0] = -1517; // X
         Path1[7,1] = -3747; // Y

         Path1[8,0] = -2473; // X
         Path1[8,1] = -3747; // Y

         Path1[9,0] = -3029; // X
         Path1[9,1] = -3509; // Y


endfunction;
//----------------------------------------------------------------------------------------

//----------------------------------------------------------------------------------------
// Main Code
//----------------------------------------------------------------------------------------

code

    //Initialize Orders Library
    initOrders;

    if (TRUE) then
         // Order  1 
         if (Order1Status == INCOMPLETE) then
              Order1Status = Patrol(Path1,10,PATROL_BACK_AND_FORTH, 99999);
              if (Order1Status == INCOMPLETE) then
                   return(1);
              endif;
         else
              if (Order1Status == FAILED) then
                   // Order  2 
                   if (Order2Status == INCOMPLETE) then
                        Order2Status = Attack;
                        if (Order2Status == INCOMPLETE) then
                             return(1);
                        endif;
                   endif;
              endif;
         endif;
    endif;

         return(1);
endmodule.
