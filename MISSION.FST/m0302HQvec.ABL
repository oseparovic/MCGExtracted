//****************************************************************************************//
//
//    UNIVERSAL WARRIOR BRAIN     CREATED:1/19/98   BY:Rob Nicholls
//                              by the MechCommander(TM) Data Entry Application
//
//   Modification, duplication & distribution is strictly limited to non-commercial
//   enterprise unless otherwise indicated by FASA Interactive Technologies, Inc.
//
//           Copyright 1997 FASA Interactive Technologies, Inc.
//****************************************************************************************//

module WBm0302HQvec : integer;

//****************************************************************************************//

const
    #include_ "OConst.abi"
    #include_ "UnitConst.abi"
type

var

    //-------------------------------------
    // Enter Additional Variables Here

    static integer                     Order1Status;

//----------------------------------------------------------------------------------------
function Init;

    code
         #include_ "UBInit.abi"
         //----------------------------------------
         // Enter Initial Behavior Variations Here

         // OrderStatus
         Order1Status = INCOMPLETE;

         SetEngageRadius(100);
         SetDisEngageRadius(100);
         IdentifySensorContactsOFF;
         MoveToEngageOFF;

endfunction;
//----------------------------------------------------------------------------------------

//----------------------------------------------------------------------------------------
// Main Code
//----------------------------------------------------------------------------------------

code

    //Initialize Orders Library
    initOrders;

    if (inHotSpot(PLAYER_FORCE,1728,4162,125)) then
         // Order  1 
         if (Order1Status == INCOMPLETE) then
              Order1Status = MoveTo(3205,4270);
              if (Order1Status == INCOMPLETE) then
                   return(1);
              endif;
         endif;
    endif;


         return(1);
endmodule.
