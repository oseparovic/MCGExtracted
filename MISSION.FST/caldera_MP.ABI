//*********************************************************************************
// MultiPlayer Include file for mission caldera

function handleMessage;

     Var

           integer MsgParams;
           integer MsgCode;

     Code

           MsgCode = getMessage(MsgParams);

           Switch (MsgCode)

                 case MSG_GENERAL_ALARM_ON:

                       GeneralAlarm = TRUE;
                       PlayGASound = TRUE;
                       PlayPASound = FALSE;
                       endcase;

                 case MSG_GENERAL_ALARM_OFF:

                       PlayGASound = FALSE;
                       endcase;

                 case MSG_PERIMETER_ALARM_ON:

                       PlayPASound = TRUE;
                       endcase;

                 case MSG_PERIMETER_ALARM_OFF:

                       PlayPASound = FALSE;
                       endcase;

                 case MSG_SET_EXIT_TIMER:

                       setTimer(EXIT_TIMER,2.0);
                       ExitTimerSet = TRUE;
                       endcase;

                 case MSG_PLAY_END_MUSIC:

                       switch (MsgParams)
                             case INNER_SPHERE_VICTORY:
                                   if (getHomeTeam == PLAYER_FORCE) then
                                       PlayDigitalMusic(VICTORY_MUSIC);
                                   else
                                       PlayDigitalMusic(DEFEAT_MUSIC);
                                   endif;
                                   endcase;
                             case CLAN_VICTORY:
                                   if (getHomeTeam == CLAN_FORCE) then
                                       PlayDigitalMusic(VICTORY_MUSIC);
                                   else
                                       PlayDigitalMusic(DEFEAT_MUSIC);
                                   endif;
                                   endcase;
                             case JOINT_LOSS:
                                   PlayDigitalMusic(DEFEAT_MUSIC);
                                   endcase;
                             case JOINT_VICTORY:
                                   PlayDigitalMusic(VICTORY_MUSIC);
                                   endcase;
                       endswitch;
                       endcase;

                 Case 1:

                       setObjectiveStatus(0, FAILED);
                       endcase;

                 Case 2:

                       setObjectiveStatus(1, FAILED);
                       endcase;

                 Case 3:

                       SetObjectiveStatus(0,SUCCESS);
                       VictoryLevel = VictoryLevel + 1;
                       if (getHomeTeam == PLAYER_FORCE) then
                            playBetty(BETTY_OBJECTIVE_COMPLETE);
                            if ((VictoryLevel < 1) AND (ClanVictoryLevel < 1)) then
                                 PlayDigitalMusic(OBJECTIVE_SUCCESS_MUSIC);
                            endif;
                       endif;
                       Objective_0_Decided = TRUE;
                       endcase;

                 Case 4:

                       SetObjectiveStatus(0,FAILED);
                       if (getHomeTeam == PLAYER_FORCE) then
                            playBetty(BETTY_CANNOT_COMP_OBJ);
                       endif;
                       Objective_0_Decided = TRUE;
                       endcase;

                 Case 5:

                       SetObjectiveStatus(1,SUCCESS);
                       ClanVictoryLevel = ClanVictoryLevel + 1;
                       if (getHomeTeam == CLAN_FORCE) then
                            playBetty(BETTY_OBJECTIVE_COMPLETE);
                            if ((VictoryLevel < 1) AND (ClanVictoryLevel < 1)) then
                                 PlayDigitalMusic(OBJECTIVE_SUCCESS_MUSIC);
                            endif;
                       endif;
                       Objective_1_Decided = TRUE;
                       endcase;

                 Case 6:

                       SetObjectiveStatus(1,FAILED);
                       if (getHomeTeam == CLAN_FORCE) then
                            playBetty(BETTY_CANNOT_COMP_OBJ);
                       endif;
                       Objective_1_Decided = TRUE;
                       endcase;

                 Case 7:

                       setObjectiveStatus(1, FAILED);
                       endcase;

                 Case 8:

                       setObjectiveStatus(0, FAILED);
                       endcase;

                 Case 9:

                       setObjectActive(30680,FALSE);
                       setObjectActive(30688,FALSE);
                       setObjectActive(30840,FALSE);
                       setObjectActive(30848,FALSE);
                       setObjectActive(31976,FALSE);
                       setObjectActive(31984,FALSE);
                       setObjectActive(32136,FALSE);
                       setObjectActive(32144,FALSE);
                       setObjectActive(45776,FALSE);
                       setObjectActive(45784,FALSE);
                       setObjectActive(45936,FALSE);
                       setObjectActive(45944,FALSE);
                       setObjectActive(46304,FALSE);
                       setObjectActive(46312,FALSE);
                       setObjectActive(46464,FALSE);
                       setObjectActive(46472,FALSE);
                       setObjectActive(48920,FALSE);
                       setObjectActive(48928,FALSE);
                       setObjectActive(49080,FALSE);
                       setObjectActive(49088,FALSE);
                       Turret_Control_007313000Alignment = -2;
                       endcase;

                 Case 10:

                       objectChangeSides(30680,MsgParams);
                       setPotentialContact(30680,2);
                       objectChangeSides(30688,MsgParams);
                       setPotentialContact(30688,2);
                       objectChangeSides(30840,MsgParams);
                       setPotentialContact(30840,2);
                       objectChangeSides(30848,MsgParams);
                       setPotentialContact(30848,2);
                       objectChangeSides(31976,MsgParams);
                       setPotentialContact(31976,2);
                       objectChangeSides(31984,MsgParams);
                       setPotentialContact(31984,2);
                       objectChangeSides(32136,MsgParams);
                       setPotentialContact(32136,2);
                       objectChangeSides(32144,MsgParams);
                       setPotentialContact(32144,2);
                       objectChangeSides(45776,MsgParams);
                       setPotentialContact(45776,2);
                       objectChangeSides(45784,MsgParams);
                       setPotentialContact(45784,2);
                       objectChangeSides(45936,MsgParams);
                       setPotentialContact(45936,2);
                       objectChangeSides(45944,MsgParams);
                       setPotentialContact(45944,2);
                       objectChangeSides(46304,MsgParams);
                       setPotentialContact(46304,2);
                       objectChangeSides(46312,MsgParams);
                       setPotentialContact(46312,2);
                       objectChangeSides(46464,MsgParams);
                       setPotentialContact(46464,2);
                       objectChangeSides(46472,MsgParams);
                       setPotentialContact(46472,2);
                       objectChangeSides(48920,MsgParams);
                       setPotentialContact(48920,2);
                       objectChangeSides(48928,MsgParams);
                       setPotentialContact(48928,2);
                       objectChangeSides(49080,MsgParams);
                       setPotentialContact(49080,2);
                       objectChangeSides(49088,MsgParams);
                       setPotentialContact(49088,2);
                       Turret_Control_007313000Alignment = MsgParams;
                       objectChangeSides(Turret_Control_007313000,MsgParams);
                       endcase;

                 Case 11:

                       LockGateOpen(31480);
                       Gate_Control_008241000Alignment = -2;
                       endcase;

                 Case 12:

                       LockGateClosed(31480);
                       Gate_Control_008241000Alignment = -2;
                       endcase;

                 Case 13:

                       objectChangeSides(31480,MsgParams);
                       ReleaseGateLock(31480);
                       Gate_Control_008241000Alignment = MsgParams;
                       objectChangeSides(Gate_Control_008241000,MsgParams);
                       endcase;

                 Case 14:

                       setObjectActive(51080,FALSE);
                       setObjectActive(54336,FALSE);
                       setObjectActive(68224,FALSE);
                       setObjectActive(71296,FALSE);
                       Turret_Control_014317000Alignment = -2;
                       endcase;

                 Case 15:

                       objectChangeSides(51080,MsgParams);
                       setPotentialContact(51080,2);
                       objectChangeSides(54336,MsgParams);
                       setPotentialContact(54336,2);
                       objectChangeSides(68224,MsgParams);
                       setPotentialContact(68224,2);
                       objectChangeSides(71296,MsgParams);
                       setPotentialContact(71296,2);
                       Turret_Control_014317000Alignment = MsgParams;
                       objectChangeSides(Turret_Control_014317000,MsgParams);
                       endcase;

                 Case 16:

                       LockGateOpen(51096);
                       Gate_Control_014316000Alignment = -2;
                       endcase;

                 Case 17:

                       LockGateClosed(51096);
                       Gate_Control_014316000Alignment = -2;
                       endcase;

                 Case 18:

                       LockGateOpen(51728);
                       Gate_Control_014316000Alignment = -2;
                       endcase;

                 Case 19:

                       LockGateClosed(51728);
                       Gate_Control_014316000Alignment = -2;
                       endcase;

                 Case 20:

                       LockGateOpen(52056);
                       Gate_Control_014316000Alignment = -2;
                       endcase;

                 Case 21:

                       LockGateClosed(52056);
                       Gate_Control_014316000Alignment = -2;
                       endcase;

                 Case 22:

                       LockGateOpen(54824);
                       Gate_Control_014316000Alignment = -2;
                       endcase;

                 Case 23:

                       LockGateClosed(54824);
                       Gate_Control_014316000Alignment = -2;
                       endcase;

                 Case 24:

                       objectChangeSides(51096,MsgParams);
                       ReleaseGateLock(51096);
                       objectChangeSides(51728,MsgParams);
                       ReleaseGateLock(51728);
                       objectChangeSides(52056,MsgParams);
                       ReleaseGateLock(52056);
                       objectChangeSides(54824,MsgParams);
                       ReleaseGateLock(54824);
                       Gate_Control_014316000Alignment = MsgParams;
                       objectChangeSides(Gate_Control_014316000,MsgParams);
                       endcase;

                 Case 25:

                       setObjectActive(72872,FALSE);
                       setObjectActive(72880,FALSE);
                       setObjectActive(72888,FALSE);
                       setObjectActive(73032,FALSE);
                       setObjectActive(73192,FALSE);
                       setObjectActive(73352,FALSE);
                       setObjectActive(73512,FALSE);
                       setObjectActive(73672,FALSE);
                       setObjectActive(73832,FALSE);
                       setObjectActive(73992,FALSE);
                       setObjectActive(74472,FALSE);
                       setObjectActive(75936,FALSE);
                       setObjectActive(75944,FALSE);
                       setObjectActive(75952,FALSE);
                       setObjectActive(75960,FALSE);
                       setObjectActive(75968,FALSE);
                       setObjectActive(75992,FALSE);
                       Turret_Control_022282000Alignment = -2;
                       endcase;

                 Case 26:

                       objectChangeSides(72872,MsgParams);
                       setPotentialContact(72872,2);
                       objectChangeSides(72880,MsgParams);
                       setPotentialContact(72880,2);
                       objectChangeSides(72888,MsgParams);
                       setPotentialContact(72888,2);
                       objectChangeSides(73032,MsgParams);
                       setPotentialContact(73032,2);
                       objectChangeSides(73192,MsgParams);
                       setPotentialContact(73192,2);
                       objectChangeSides(73352,MsgParams);
                       setPotentialContact(73352,2);
                       objectChangeSides(73512,MsgParams);
                       setPotentialContact(73512,2);
                       objectChangeSides(73672,MsgParams);
                       setPotentialContact(73672,2);
                       objectChangeSides(73832,MsgParams);
                       setPotentialContact(73832,2);
                       objectChangeSides(73992,MsgParams);
                       setPotentialContact(73992,2);
                       objectChangeSides(74472,MsgParams);
                       setPotentialContact(74472,2);
                       objectChangeSides(75936,MsgParams);
                       setPotentialContact(75936,2);
                       objectChangeSides(75944,MsgParams);
                       setPotentialContact(75944,2);
                       objectChangeSides(75952,MsgParams);
                       setPotentialContact(75952,2);
                       objectChangeSides(75960,MsgParams);
                       setPotentialContact(75960,2);
                       objectChangeSides(75968,MsgParams);
                       setPotentialContact(75968,2);
                       objectChangeSides(75992,MsgParams);
                       setPotentialContact(75992,2);
                       Turret_Control_022282000Alignment = MsgParams;
                       objectChangeSides(Turret_Control_022282000,MsgParams);
                       endcase;

                 Case 27:

                       LockGateOpen(74328);
                       Gate_Control_022342000Alignment = -2;
                       endcase;

                 Case 28:

                       LockGateClosed(74328);
                       Gate_Control_022342000Alignment = -2;
                       endcase;

                 Case 29:

                       LockGateOpen(76304);
                       Gate_Control_022342000Alignment = -2;
                       endcase;

                 Case 30:

                       LockGateClosed(76304);
                       Gate_Control_022342000Alignment = -2;
                       endcase;

                 Case 31:

                       objectChangeSides(74328,MsgParams);
                       ReleaseGateLock(74328);
                       objectChangeSides(76304,MsgParams);
                       ReleaseGateLock(76304);
                       Gate_Control_022342000Alignment = MsgParams;
                       objectChangeSides(Gate_Control_022342000,MsgParams);
                       endcase;

                 Case 32:

                       setObjectActive(37704,FALSE);
                       setObjectActive(37720,FALSE);
                       setObjectActive(38024,FALSE);
                       setObjectActive(38040,FALSE);
                       Turret_Control_010242000Alignment = -2;
                       endcase;

                 Case 33:

                       objectChangeSides(37704,MsgParams);
                       setPotentialContact(37704,2);
                       objectChangeSides(37720,MsgParams);
                       setPotentialContact(37720,2);
                       objectChangeSides(38024,MsgParams);
                       setPotentialContact(38024,2);
                       objectChangeSides(38040,MsgParams);
                       setPotentialContact(38040,2);
                       Turret_Control_010242000Alignment = MsgParams;
                       objectChangeSides(Turret_Control_010242000,MsgParams);
                       endcase;

                 Case 34:

                       setObjectActive(67384,FALSE);
                       setObjectActive(67400,FALSE);
                       setObjectActive(67704,FALSE);
                       setObjectActive(67720,FALSE);
                       Turret_Control_019333000Alignment = -2;
                       endcase;

                 Case 35:

                       objectChangeSides(67384,MsgParams);
                       setPotentialContact(67384,2);
                       objectChangeSides(67400,MsgParams);
                       setPotentialContact(67400,2);
                       objectChangeSides(67704,MsgParams);
                       setPotentialContact(67704,2);
                       objectChangeSides(67720,MsgParams);
                       setPotentialContact(67720,2);
                       Turret_Control_019333000Alignment = MsgParams;
                       objectChangeSides(Turret_Control_019333000,MsgParams);
                       endcase;

                 Case 36:

                       objectChangeSides(Mech_Bay_007212000,MsgParams);
                       Mech_Bay_007212000Alignment = MsgParams;
                       endcase;

                 Case 37:

                       objectChangeSides(Artillery_Crate_014336000, NEUTRAL);
                       if (getStrikes(((MsgParams/10)-1),(MsgParams MOD 10)) < MAX_STRIKES) then
                             addStrikes(((MsgParams/10)-1),(MsgParams MOD 10),1);
                       endif;
                       setCaptureable(Artillery_Crate_014336000, FALSE);
                       Artillery_Crate_014336000Alignment = -2;
                       endcase;

                 Case 38:

                       Artillery_Crate_014336000Alignment = Artillery_Crate_014336000Alignment - 1;
                       endcase;

                 Case 39:

                       setCaptureable(Artillery_Crate_014336000, TRUE);
                       Artillery_Crate_014336000Alignment = NEUTRAL;
                       endcase;

                 Case 40:

                       objectChangeSides(Artillery_Crate_014339000, NEUTRAL);
                       if (getStrikes(((MsgParams/10)-1),(MsgParams MOD 10)) < MAX_STRIKES) then
                             addStrikes(((MsgParams/10)-1),(MsgParams MOD 10),1);
                       endif;
                       setCaptureable(Artillery_Crate_014339000, FALSE);
                       Artillery_Crate_014339000Alignment = -2;
                       endcase;

                 Case 41:

                       Artillery_Crate_014339000Alignment = Artillery_Crate_014339000Alignment - 1;
                       endcase;

                 Case 42:

                       setCaptureable(Artillery_Crate_014339000, TRUE);
                       Artillery_Crate_014339000Alignment = NEUTRAL;
                       endcase;

                 Case 43:

                       objectChangeSides(Mech_Bay_022345000,MsgParams);
                       Mech_Bay_022345000Alignment = MsgParams;
                       endcase;

           endswitch;

endfunction;

