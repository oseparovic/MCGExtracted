//****************************************************************************************//
//
//    UNIVERSAL WARRIOR BRAIN     CREATED:11/11/98   BY:joe sislow
//                              by the MechCommander(TM) Data Entry Application
//
//   Modification, duplication & distribution is strictly limited to non-commercial
//   enterprise unless otherwise indicated by FASA Interactive Technologies, Inc.
//
//           Copyright 1997 FASA Interactive Technologies, Inc.
//****************************************************************************************//

module WBmx0304_1JabberPatrol : integer;

//****************************************************************************************//

const
    #include_ "OConst.abi"
    #include_ "UnitConst.abi"
type

var

    //-------------------------------------
    // Enter Additional Variables Here

    static integer                     Order1Status;
    static integer                     Order2Status;
    static integer                     Order3Status;
    static integer                     Order4Status;
    static integer                     Order5Status;
    static integer                     Order6Status;
    static integer                     Order7Status;
    static integer                     Order8Status;

    // PATHS
    static path                        JabberPatrol1;

//----------------------------------------------------------------------------------------
function Init;

    code
         #include_ "UBInit.abi"
         //----------------------------------------
         // Enter Initial Behavior Variations Here

         // OrderStatus
         Order1Status = INCOMPLETE;
         Order2Status = INCOMPLETE;
         Order3Status = INCOMPLETE;
         Order4Status = INCOMPLETE;
         Order5Status = INCOMPLETE;
         Order6Status = INCOMPLETE;
         Order7Status = INCOMPLETE;
         Order8Status = INCOMPLETE;

         // Paths

         JabberPatrol1[0,0] = -1070; // X
         JabberPatrol1[0,1] = 1360; // Y

         JabberPatrol1[1,0] = -4260; // X
         JabberPatrol1[1,1] = 1360; // Y

         JabberPatrol1[2,0] = -4260; // X
         JabberPatrol1[2,1] = 2340; // Y

         JabberPatrol1[3,0] = -5240; // X
         JabberPatrol1[3,1] = 2340; // Y

         JabberPatrol1[4,0] = -5240; // X
         JabberPatrol1[4,1] = 4500; // Y

         SetEngageRadius(150);
         SetDisEngageRadius(850);

endfunction;
//----------------------------------------------------------------------------------------

//----------------------------------------------------------------------------------------
// Main Code
//----------------------------------------------------------------------------------------

code

    //Initialize Orders Library
    initOrders;

    if (getHits >= 5) then
         // Order  2 
         if (Order2Status == INCOMPLETE) then
              Flag1 = TRUE;
              Order2Status = SUCCESS;
         endif;
    endif;
    if (JabberMainAlarm == TRUE) then
         // Order  3 
         if (Order3Status == INCOMPLETE) then
              Flag1 = TRUE;
              Order3Status = SUCCESS;
         endif;
    endif;
    if (WestJabberPatrolAlarm == TRUE) then
         // Order  4 
         if (Order4Status == INCOMPLETE) then
              Flag1 = TRUE;
              Order4Status = SUCCESS;
         endif;
    endif;
    if (flag1) then
         // Order  5 
         if (Order5Status == INCOMPLETE) then
              SetEngageRadius(5000);
              Order5Status = SUCCESS;
         else
              if (Order5Status <> INCOMPLETE) then
                   // Order  6 
                   if (Order6Status == INCOMPLETE) then
                        SetSpeed(RUN);
                        Order6Status = SUCCESS;
                   else
                        if (Order6Status <> INCOMPLETE) then
                             // Order  7 
                             if (Order7Status == INCOMPLETE) then
                                  Order7Status = Attack;
                                  if (Order7Status == INCOMPLETE) then
                                       return(1);
                                  endif;
                             endif;
                        endif;
                   endif;
              endif;
         endif;
    endif;

    if (TRUE) then
         // Order  1 
         if (Order1Status == INCOMPLETE) then
              Order1Status = Patrol(JabberPatrol1,5,PATROL_BACK_AND_FORTH, 8000000);
              if (Order1Status == INCOMPLETE) then
                   return(1);
              endif;
         else
              if (Order1Status == FAILED) then
                   // Order  8 
                   if (Order8Status == INCOMPLETE) then
                        Order8Status = Attack;
                        if (Order8Status == INCOMPLETE) then
                             return(1);
                        endif;
                   endif;
              endif;
         endif;
    endif;

         return(1);
endmodule.
