//*********************************************************************************

module MissionBrain_4_3 : integer;

     //--------------------------------------------------------
     // Operation:  4                  Mission:  3 
     // MissionID:  193                Name: Activate Abandoned Base
     // Designer: Erol Otus
     // Created: 10/15/97              By: Erol Otus
     //--------------------------------------------------------

//------------------------------------------------------------------
//
//     Constant Definitions
//
//------------------------------------------------------------------
     const

          #include_ "misconst.abi"

          //------------------
          // Objective IDs
          //------------------
           OBJ0_Activate_and_Defend_aba  = 0;
           OBJ1_Destroy_all_Enemy_units  = 1;

//------------------------------------------------------------------
//
//     Type Definitions
//
//------------------------------------------------------------------
     type


//------------------------------------------------------------------
//
//     Variable Declarations
//
//------------------------------------------------------------------
      var

            #include_ "4_3VAR.ABI"

            static integer      ScenarioResult;
            eternal boolean     ExitTimerSet;
            static integer      VictoryLevel;
            char[40]            dstring;
            real                gametime;
            static real         nextsecond;
            integer             x;
            integer             y;
            Position            aPoint;
            eternal boolean     PlayerForceDead;
            eternal boolean     ClanForceDead;
            eternal boolean     AlliedForceDead;
            eternal boolean     GeneralAlarm;
            eternal boolean     Flag1;
            eternal boolean     Flag2;
            eternal boolean     Flag3;
            eternal boolean     Flag4;
            eternal boolean     Flag5;
            eternal integer     GeneralAlarmCounter;
            static boolean      Objective_0_Decided;
            static boolean      Objective_1_Decided;

//------------------------------------------------------------------
//
//     Init Function    (automatically run first time through)
//
//------------------------------------------------------------------
function init;

       code

            #include_ "4_3INIT.ABI"

            ScenarioResult = PLAYING;
            PlayerForceDead = FALSE;
            ClanForceDead = FALSE;
            AlliedForceDead = FALSE;
            ExitTimerSet = FALSE;
            VictoryLevel = 1;
            NextSecond = 1.0;
            GeneralAlarmCounter = -1;
            Objective_0_Decided = FALSE;
            Objective_1_Decided = FALSE;

endfunction;

//------------------------------------------------------------------
//
//     Main Code
//
//------------------------------------------------------------------
       code

            //------------------------------------------------
            // Debug Window Game Clock Second Counter
            // Note:  This is used by some included functions.
            //------------------------------------------------
            gametime = gettime;
            If (gametime >= nextsecond) Then
                  nextsecond = gametime + 1;
                  If (GeneralAlarm) then
                       GeneralAlarmCounter = GeneralAlarmCounter + 1;
                  endif;
                  dstring = "Gametime: ";
                  concat(dstring,gametime);
                  Print (dstring);
            endif;

            //---------------------------------------
            // Create Non-Existing Vehicles
            //---------------------------------------
            #include_ "4_3CRE.ABI"

            //---------------------------------------
            // Activate inactive vehicles
            //---------------------------------------
            #include_ "4_3ACT.ABI"

            //---------------------------------------
            // Structure
            //---------------------------------------
            #include_ "4_3STR.ABI"

            //---------------------------------------
            // Lookout Points
            //---------------------------------------
            #include_ "4_3LOP.ABI"

            //---------------------------------------
            // Force Dead Checks
            //---------------------------------------
            if (isDead(PLAYER_FORCE)) then
                  PlayerForceDead = TRUE;
            endif;
            if (isDead(CLAN_FORCE)) then
                  ClanForceDead = TRUE;
            endif;
            if (isDead(ALLIED_FORCE)) then
                  AlliedForceDead = TRUE;
            endif;

            //---------------------------------------
            // SET EXIT TIMER IF PLAYER DEAD/DISABLED
            //---------------------------------------

            if ((NOT ExitTimerSet) AND (PlayerForceDead)) then
                  setTimer(EXIT_TIMER,10.0);
                  ExitTimerSet = TRUE;
                  PlayDigitalMusic(DEFEAT_MUSIC);
                  // Fail any Undecided Objectives
                  if (checkObjectiveStatus(0) == INCOMPLETE) then
                        setObjectiveStatus(0, FAILED);
                  endif;
                  if (checkObjectiveStatus(1) == INCOMPLETE) then
                        setObjectiveStatus(1, FAILED);
                  endif;
            endif;

            //---------------------------------------
            // Objective Resolution
            //---------------------------------------
            if (checkObjectiveStatus(0) == INCOMPLETE) then

                   // Enter Objective 0 Success/Fail Checks Here

                   // Uncomment these lines and place them where Objective is set Failed
//                        SetObjectiveStatus(0,FAILED);
//                        Objective_0_Decided = TRUE;
//                        PlayDigitalMusic(OBJECTIVE_FAIL_MUSIC);

                   // Uncomment these lines and place them where Objective is set Success
//                        SetObjectiveStatus(0,SUCCESS);
//                        VictoryLevel = VictoryLevel + 3;
//                        Objective_0_Decided = TRUE;
//                        PlayDigitalMusic(OBJECTIVE_SUCCESS_MUSIC);
            endif;

            if (checkObjectiveStatus(1) == INCOMPLETE) then

                   // Enter Objective 1 Success/Fail Checks Here

                   // Uncomment these lines and place them where Objective is set Failed
//                        SetObjectiveStatus(1,FAILED);
//                        Objective_1_Decided = TRUE;
//                        PlayDigitalMusic(OBJECTIVE_FAIL_MUSIC);

                   // Uncomment these lines and place them where Objective is set Success
//                        SetObjectiveStatus(1,SUCCESS);
//                        VictoryLevel = VictoryLevel + 1;
//                        Objective_1_Decided = TRUE;
//                        PlayDigitalMusic(OBJECTIVE_SUCCESS_MUSIC);
            endif;

            if ((NOT ExitTimerSet) AND (Objective_0_Decided) AND (Objective_1_Decided)) then
                  setTimer(EXIT_TIMER,10.0);
                  ExitTimerSet = TRUE;
                  PlayDigitalMusic(VICTORY_MUSIC); // Need to make this conditional based on success
            endif;

            //---------------------------------------
            // END SCENARIO
            //---------------------------------------

            if ((ExitTimerSet) AND (CheckTimer(EXIT_TIMER) == 0.0)) then
                  ScenarioResult = VictoryLevel;
            endif;

            //---------------------------------------
            // RETURN RESULT
            //---------------------------------------

            return (ScenarioResult);
endmodule.
//******************************************************************
